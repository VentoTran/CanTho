ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_UART_RxCpltCallback
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_UART_RxCpltCallback:
  25              	.LVL0:
  26              	.LFB69:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "iwdg.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** #include "MQTTSim800.h"
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** SIM800_t SIM800;
  52:Core/Src/main.c **** GPS_Sta_t myGPS;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  66:Core/Src/main.c **** {
  28              		.loc 1 66 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 66 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  67:Core/Src/main.c ****   if (huart == UART_SIM800)
  38              		.loc 1 67 3 is_stmt 1 view .LVU2
  39              		.loc 1 67 6 is_stmt 0 view .LVU3
  40 0002 034B     		ldr	r3, .L5
  41 0004 8342     		cmp	r3, r0
  42 0006 00D0     		beq	.L4
  43              	.LVL1:
  44              	.L1:
  68:Core/Src/main.c ****   {
  69:Core/Src/main.c ****     Sim800_RxCallBack();
  70:Core/Src/main.c ****   }
  71:Core/Src/main.c **** }
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 3


  45              		.loc 1 71 1 view .LVU4
  46 0008 08BD     		pop	{r3, pc}
  47              	.LVL2:
  48              	.L4:
  69:Core/Src/main.c ****   }
  49              		.loc 1 69 5 is_stmt 1 view .LVU5
  50 000a FFF7FEFF 		bl	Sim800_RxCallBack
  51              	.LVL3:
  52              		.loc 1 71 1 is_stmt 0 view .LVU6
  53 000e FBE7     		b	.L1
  54              	.L6:
  55              		.align	2
  56              	.L5:
  57 0010 00000000 		.word	huart1
  58              		.cfi_endproc
  59              	.LFE69:
  61              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  62              		.align	1
  63              		.global	HAL_TIM_PeriodElapsedCallback
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	HAL_TIM_PeriodElapsedCallback:
  70              	.LVL4:
  71              	.LFB72:
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 4


 103:Core/Src/main.c ****   MX_I2C1_Init();
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 105:Core/Src/main.c ****   MX_IWDG_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Init scheduler */
 111:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 112:Core/Src/main.c ****   MX_FREERTOS_Init();
 113:Core/Src/main.c ****   /* Start scheduler */
 114:Core/Src/main.c ****   osKernelStart();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   while (1)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****   * @brief System Clock Configuration
 130:Core/Src/main.c ****   * @retval None
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** void SystemClock_Config(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 138:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 5


 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* USER CODE END 4 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 173:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 174:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 175:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 176:Core/Src/main.c ****   * @param  htim : TIM handle
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 180:Core/Src/main.c **** {
  72              		.loc 1 180 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 180 1 is_stmt 0 view .LVU8
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 181:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 184:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  82              		.loc 1 184 3 is_stmt 1 view .LVU9
  83              		.loc 1 184 11 is_stmt 0 view .LVU10
  84 0002 0268     		ldr	r2, [r0]
  85              		.loc 1 184 6 view .LVU11
  86 0004 034B     		ldr	r3, .L11
  87 0006 9A42     		cmp	r2, r3
  88 0008 00D0     		beq	.L10
  89              	.LVL5:
  90              	.L7:
 185:Core/Src/main.c ****     HAL_IncTick();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 190:Core/Src/main.c **** }
  91              		.loc 1 190 1 view .LVU12
  92 000a 08BD     		pop	{r3, pc}
  93              	.LVL6:
  94              	.L10:
 185:Core/Src/main.c ****     HAL_IncTick();
  95              		.loc 1 185 5 is_stmt 1 view .LVU13
  96 000c FFF7FEFF 		bl	HAL_IncTick
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 6


  97              	.LVL7:
  98              		.loc 1 190 1 is_stmt 0 view .LVU14
  99 0010 FBE7     		b	.L7
 100              	.L12:
 101 0012 00BF     		.align	2
 102              	.L11:
 103 0014 002C0140 		.word	1073818624
 104              		.cfi_endproc
 105              	.LFE72:
 107              		.section	.text.Error_Handler,"ax",%progbits
 108              		.align	1
 109              		.global	Error_Handler
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu softvfp
 115              	Error_Handler:
 116              	.LFB73:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** void Error_Handler(void)
 197:Core/Src/main.c **** {
 117              		.loc 1 197 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 198:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 199:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 200:Core/Src/main.c ****   __disable_irq();
 123              		.loc 1 200 3 view .LVU16
 124              	.LBB4:
 125              	.LBI4:
 126              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 7


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 8


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 9


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 127              		.loc 2 140 27 view .LVU17
 128              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 129              		.loc 2 142 3 view .LVU18
 130              		.syntax unified
 131              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 132 0000 72B6     		cpsid i
 133              	@ 0 "" 2
 134              		.thumb
 135              		.syntax unified
 136              	.L14:
 137              	.LBE5:
 138              	.LBE4:
 201:Core/Src/main.c ****   while (1)
 139              		.loc 1 201 3 discriminator 1 view .LVU19
 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****   }
 140              		.loc 1 203 3 discriminator 1 view .LVU20
 201:Core/Src/main.c ****   while (1)
 141              		.loc 1 201 9 discriminator 1 view .LVU21
 142 0002 FEE7     		b	.L14
 143              		.cfi_endproc
 144              	.LFE73:
 146              		.section	.text.SystemClock_Config,"ax",%progbits
 147              		.align	1
 148              		.global	SystemClock_Config
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu softvfp
 154              	SystemClock_Config:
 155              	.LFB71:
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 156              		.loc 1 133 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 64
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 00B5     		push	{lr}
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 14, -4
 164 0002 91B0     		sub	sp, sp, #68
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 72
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167              		.loc 1 134 3 view .LVU23
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 168              		.loc 1 134 22 is_stmt 0 view .LVU24
 169 0004 2822     		movs	r2, #40
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 10


 170 0006 0021     		movs	r1, #0
 171 0008 06A8     		add	r0, sp, #24
 172 000a FFF7FEFF 		bl	memset
 173              	.LVL8:
 135:Core/Src/main.c **** 
 174              		.loc 1 135 3 is_stmt 1 view .LVU25
 135:Core/Src/main.c **** 
 175              		.loc 1 135 22 is_stmt 0 view .LVU26
 176 000e 0023     		movs	r3, #0
 177 0010 0193     		str	r3, [sp, #4]
 178 0012 0293     		str	r3, [sp, #8]
 179 0014 0393     		str	r3, [sp, #12]
 180 0016 0493     		str	r3, [sp, #16]
 181 0018 0593     		str	r3, [sp, #20]
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 182              		.loc 1 140 3 is_stmt 1 view .LVU27
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 183              		.loc 1 140 36 is_stmt 0 view .LVU28
 184 001a 0923     		movs	r3, #9
 185 001c 0693     		str	r3, [sp, #24]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 186              		.loc 1 141 3 is_stmt 1 view .LVU29
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 187              		.loc 1 141 30 is_stmt 0 view .LVU30
 188 001e 4FF48033 		mov	r3, #65536
 189 0022 0793     		str	r3, [sp, #28]
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 190              		.loc 1 142 3 is_stmt 1 view .LVU31
 143:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 191              		.loc 1 143 3 view .LVU32
 143:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 192              		.loc 1 143 30 is_stmt 0 view .LVU33
 193 0024 0122     		movs	r2, #1
 194 0026 0A92     		str	r2, [sp, #40]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195              		.loc 1 144 3 is_stmt 1 view .LVU34
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 196              		.loc 1 144 30 is_stmt 0 view .LVU35
 197 0028 0C92     		str	r2, [sp, #48]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 198              		.loc 1 145 3 is_stmt 1 view .LVU36
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 199              		.loc 1 145 34 is_stmt 0 view .LVU37
 200 002a 0222     		movs	r2, #2
 201 002c 0D92     		str	r2, [sp, #52]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 202              		.loc 1 146 3 is_stmt 1 view .LVU38
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 203              		.loc 1 146 35 is_stmt 0 view .LVU39
 204 002e 0E93     		str	r3, [sp, #56]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 205              		.loc 1 147 3 is_stmt 1 view .LVU40
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206              		.loc 1 147 32 is_stmt 0 view .LVU41
 207 0030 4FF4E013 		mov	r3, #1835008
 208 0034 0F93     		str	r3, [sp, #60]
 148:Core/Src/main.c ****   {
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 11


 209              		.loc 1 148 3 is_stmt 1 view .LVU42
 148:Core/Src/main.c ****   {
 210              		.loc 1 148 7 is_stmt 0 view .LVU43
 211 0036 06A8     		add	r0, sp, #24
 212 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 213              	.LVL9:
 148:Core/Src/main.c ****   {
 214              		.loc 1 148 6 view .LVU44
 215 003c 80B9     		cbnz	r0, .L19
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 216              		.loc 1 154 3 is_stmt 1 view .LVU45
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 217              		.loc 1 154 31 is_stmt 0 view .LVU46
 218 003e 0F23     		movs	r3, #15
 219 0040 0193     		str	r3, [sp, #4]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220              		.loc 1 156 3 is_stmt 1 view .LVU47
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 221              		.loc 1 156 34 is_stmt 0 view .LVU48
 222 0042 0221     		movs	r1, #2
 223 0044 0291     		str	r1, [sp, #8]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 224              		.loc 1 157 3 is_stmt 1 view .LVU49
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 225              		.loc 1 157 35 is_stmt 0 view .LVU50
 226 0046 0023     		movs	r3, #0
 227 0048 0393     		str	r3, [sp, #12]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 228              		.loc 1 158 3 is_stmt 1 view .LVU51
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 229              		.loc 1 158 36 is_stmt 0 view .LVU52
 230 004a 4FF48062 		mov	r2, #1024
 231 004e 0492     		str	r2, [sp, #16]
 159:Core/Src/main.c **** 
 232              		.loc 1 159 3 is_stmt 1 view .LVU53
 159:Core/Src/main.c **** 
 233              		.loc 1 159 36 is_stmt 0 view .LVU54
 234 0050 0593     		str	r3, [sp, #20]
 161:Core/Src/main.c ****   {
 235              		.loc 1 161 3 is_stmt 1 view .LVU55
 161:Core/Src/main.c ****   {
 236              		.loc 1 161 7 is_stmt 0 view .LVU56
 237 0052 01A8     		add	r0, sp, #4
 238 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 239              	.LVL10:
 161:Core/Src/main.c ****   {
 240              		.loc 1 161 6 view .LVU57
 241 0058 20B9     		cbnz	r0, .L20
 165:Core/Src/main.c **** 
 242              		.loc 1 165 1 view .LVU58
 243 005a 11B0     		add	sp, sp, #68
 244              	.LCFI4:
 245              		.cfi_remember_state
 246              		.cfi_def_cfa_offset 4
 247              		@ sp needed
 248 005c 5DF804FB 		ldr	pc, [sp], #4
 249              	.L19:
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 12


 250              	.LCFI5:
 251              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 252              		.loc 1 150 5 is_stmt 1 view .LVU59
 253 0060 FFF7FEFF 		bl	Error_Handler
 254              	.LVL11:
 255              	.L20:
 163:Core/Src/main.c ****   }
 256              		.loc 1 163 5 view .LVU60
 257 0064 FFF7FEFF 		bl	Error_Handler
 258              	.LVL12:
 259              		.cfi_endproc
 260              	.LFE71:
 262              		.section	.text.main,"ax",%progbits
 263              		.align	1
 264              		.global	main
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	main:
 271              	.LFB70:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 272              		.loc 1 80 1 view -0
 273              		.cfi_startproc
 274              		@ Volatile: function does not return.
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI6:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 
 282              		.loc 1 88 3 view .LVU62
 283 0002 FFF7FEFF 		bl	HAL_Init
 284              	.LVL13:
  95:Core/Src/main.c **** 
 285              		.loc 1 95 3 view .LVU63
 286 0006 FFF7FEFF 		bl	SystemClock_Config
 287              	.LVL14:
 102:Core/Src/main.c ****   MX_I2C1_Init();
 288              		.loc 1 102 3 view .LVU64
 289 000a FFF7FEFF 		bl	MX_GPIO_Init
 290              	.LVL15:
 103:Core/Src/main.c ****   MX_USART1_UART_Init();
 291              		.loc 1 103 3 view .LVU65
 292 000e FFF7FEFF 		bl	MX_I2C1_Init
 293              	.LVL16:
 104:Core/Src/main.c ****   MX_IWDG_Init();
 294              		.loc 1 104 3 view .LVU66
 295 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 296              	.LVL17:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 297              		.loc 1 105 3 view .LVU67
 298 0016 FFF7FEFF 		bl	MX_IWDG_Init
 299              	.LVL18:
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 13


 111:Core/Src/main.c ****   MX_FREERTOS_Init();
 300              		.loc 1 111 3 view .LVU68
 301 001a FFF7FEFF 		bl	osKernelInitialize
 302              	.LVL19:
 112:Core/Src/main.c ****   /* Start scheduler */
 303              		.loc 1 112 3 view .LVU69
 304 001e FFF7FEFF 		bl	MX_FREERTOS_Init
 305              	.LVL20:
 114:Core/Src/main.c **** 
 306              		.loc 1 114 3 view .LVU70
 307 0022 FFF7FEFF 		bl	osKernelStart
 308              	.LVL21:
 309              	.L22:
 119:Core/Src/main.c ****   {
 310              		.loc 1 119 3 discriminator 1 view .LVU71
 124:Core/Src/main.c ****   /* USER CODE END 3 */
 311              		.loc 1 124 3 discriminator 1 view .LVU72
 119:Core/Src/main.c ****   {
 312              		.loc 1 119 9 discriminator 1 view .LVU73
 313 0026 FEE7     		b	.L22
 314              		.cfi_endproc
 315              	.LFE70:
 317              		.global	myGPS
 318              		.global	SIM800
 319              		.section	.bss.SIM800,"aw",%nobits
 320              		.align	2
 323              	SIM800:
 324 0000 00000000 		.space	184
 324      00000000 
 324      00000000 
 324      00000000 
 324      00000000 
 325              		.section	.bss.myGPS,"aw",%nobits
 326              		.align	2
 329              	myGPS:
 330 0000 00000000 		.space	64
 330      00000000 
 330      00000000 
 330      00000000 
 330      00000000 
 331              		.text
 332              	.Letext0:
 333              		.file 3 "d:\\tools\\gcc-arm-none-eabi-10.3-2021.07\\arm-none-eabi\\include\\machine\\_default_type
 334              		.file 4 "d:\\tools\\gcc-arm-none-eabi-10.3-2021.07\\arm-none-eabi\\include\\sys\\_stdint.h"
 335              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 336              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 337              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 338              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 339              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 340              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 341              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 342              		.file 12 "Core/Inc/MQTTSim800.h"
 343              		.file 13 "Core/Inc/usart.h"
 344              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 345              		.file 15 "Core/Inc/gpio.h"
 346              		.file 16 "Core/Inc/i2c.h"
 347              		.file 17 "Core/Inc/iwdg.h"
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 14


 348              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 349              		.file 19 "<built-in>"
ARM GAS  C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:16     .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:24     .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:57     .text.HAL_UART_RxCpltCallback:00000010 $d
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:62     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:69     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:103    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:108    .text.Error_Handler:00000000 $t
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:115    .text.Error_Handler:00000000 Error_Handler
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:147    .text.SystemClock_Config:00000000 $t
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:154    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:263    .text.main:00000000 $t
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:270    .text.main:00000000 main
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:329    .bss.myGPS:00000000 myGPS
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:323    .bss.SIM800:00000000 SIM800
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:320    .bss.SIM800:00000000 $d
C:\Users\Vento\AppData\Local\Temp\cckXNDdb.s:326    .bss.myGPS:00000000 $d

UNDEFINED SYMBOLS
Sim800_RxCallBack
huart1
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_IWDG_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
